// Code generated by ent, DO NOT EDIT.

package ent

import (
	"swapcore/Core/DB/ent/network"
	"swapcore/Core/DB/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	networkFields := schema.Network{}.Fields()
	_ = networkFields
	// networkDescNetworkID is the schema descriptor for NetworkID field.
	networkDescNetworkID := networkFields[0].Descriptor()
	// network.NetworkIDValidator is a validator for the "NetworkID" field. It is called by the builders before save.
	network.NetworkIDValidator = networkDescNetworkID.Validators[0].(func(int) error)
	// networkDescName is the schema descriptor for name field.
	networkDescName := networkFields[1].Descriptor()
	// network.NameValidator is a validator for the "name" field. It is called by the builders before save.
	network.NameValidator = func() func(string) error {
		validators := networkDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// networkDescSymbol is the schema descriptor for symbol field.
	networkDescSymbol := networkFields[2].Descriptor()
	// network.SymbolValidator is a validator for the "symbol" field. It is called by the builders before save.
	network.SymbolValidator = func() func(string) error {
		validators := networkDescSymbol.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(symbol string) error {
			for _, fn := range fns {
				if err := fn(symbol); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// networkDescCreatedAt is the schema descriptor for created_at field.
	networkDescCreatedAt := networkFields[3].Descriptor()
	// network.DefaultCreatedAt holds the default value on creation for the created_at field.
	network.DefaultCreatedAt = networkDescCreatedAt.Default.(func() time.Time)
	// networkDescUpdatedAt is the schema descriptor for updated_at field.
	networkDescUpdatedAt := networkFields[4].Descriptor()
	// network.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	network.DefaultUpdatedAt = networkDescUpdatedAt.Default.(func() time.Time)
	// network.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	network.UpdateDefaultUpdatedAt = networkDescUpdatedAt.UpdateDefault.(func() time.Time)
}
